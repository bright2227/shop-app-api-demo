{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/views/Reset.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/app/src/views/Reset.vue","mtime":1603464930918},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":1603362889781},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1603362889381},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":1603362890041},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1603362890021},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1603362889381}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KYm9keSB7IA0KICBiYWNrZ3JvdW5kLWNvbG9yOiNmNGY0ZjQ7DQp9DQogIC5sb2dpbnsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7DQogICAgbWFyZ2luLXRvcDoxMCU7DQogIH0NCiAgaW5wdXQgew0KICAgIHBhZGRpbmc6IDI1cHggMTBweDsNCn0NCg=="},{"version":3,"sources":["Reset.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Reset.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n  <div class=\"container text-dark\">\r\n    <div class=\"row justify-content-md-center\">\r\n      <div class=\"col-md-5 p-3 login justify-content-md-center\">\r\n        <h1 class=\"h3 mb-3 font-weight-normal text-center\">Reset password</h1>\r\n\r\n        <form v-on:submit.prevent=\"resetrequest\" v-if=\"Request\">\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" name=\"username\" id=\"user\" v-model=\"username\" class=\"form-control\" placeholder=\"Username\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"email\" name=\"email\"  v-model=\"email\" class=\"form-control\" placeholder=\"email\">\r\n          </div>                                       \r\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Request reset</button>\r\n          <p class=\"p3 mb-3 font-weight-normal text-center\">{{inccorrectmsg}}</p>\r\n        </form>       \r\n\r\n        <form v-on:submit.prevent=\"resetpass\" v-if=\"Resetpass\">\r\n          <div class=\"form-group\">\r\n            <input type=\"password\" name=\"newpassword\" v-model=\"newpassword\" class=\"form-control\" placeholder=\"Newpassword at least 6 characters\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"password\" name=\"password_check\" v-model=\"password_check\" class=\"form-control\" placeholder=\"Password Double Check\">\r\n          </div>                                    \r\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Set new password</button>\r\n          <p class=\"p3 mb-3 font-weight-normal text-center\">{{inccorrectmsg}}</p>\r\n        </form>\r\n\r\n        <h6> {{aftermsg}} </h6>\r\n\r\n        <div v-if=\"Resetsuccess\">\r\n          <div class=\"col text-center\">\r\n            <button type=\"submit\" class=\"btn btn-default\" v-on:click=\"tologin()\"> return to login page</button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAPI } from '../axios-api'\r\n\r\nexport default {\r\n  name: 'reset',\r\n  data () {\r\n    return {\r\n      username: '',\r\n      email: '',\r\n      newpassword: '',\r\n      password_check: '',\r\n      inccorrectmsg: '',\r\n      aftermsg: '',\r\n      Resetpass: false,\r\n      Request: true,\r\n      Resetsuccess: false\r\n    }\r\n  },\r\n\r\n  created () {\r\n    console.log(this.$route.params.id)\r\n    if (this.$route.params.id != undefined){\r\n      this.Request = false\r\n      this.Resetpass = true\r\n    }\r\n  },\r\n\r\n  methods: {\r\n      tologin(){\r\n        this.$router.push({ name: 'login' })\r\n      },\r\n      resetpass (){ \r\n      if (this.password_check == '' | this.newpassword == ''){\r\n          this.inccorrectmsg = 'some field is empty'\r\n        } else if (this.newpassword.length < 6){\r\n          this.inccorrectmsg = 'password should have at least 6 characters'\r\n        } else if (this.newpassword != this.password_check){\r\n          this.inccorrectmsg = 'password double check fail'\r\n        } else {\r\n          getAPI.patch('/api/user/passreset/setpass/'+this.$route.params.id,{\r\n          password: this.newpassword\r\n        })\r\n        .then(() => {\r\n          this.Resetpass = false\r\n          this.Resetsuccess = true\r\n          this.aftermsg = 'password reset success, please back to login'\r\n        })\r\n        .catch((err) => {\r\n          this.inccorrectmsg = 'token fail'\r\n          console.log(err)\r\n        })\r\n        }\r\n      },\r\n      resetrequest (){ \r\n        const reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        if (this.username == '' | this.email == ''){\r\n          this.inccorrectmsg = 'some field is empty'\r\n        } else if (!reg.test(this.email)){\r\n          this.inccorrectmsg = 'email format wrong'\r\n        } else {\r\n          getAPI.post('/api/user/passreset/request',{\r\n          username: this.username,\r\n          email: this.email,          \r\n        })\r\n        .then(() => {\r\n          this.Request = false\r\n          this.aftermsg = 'please click mail to access reset password'\r\n        })\r\n        .catch((err) => {\r\n          this.inccorrectmsg = 'username or email is wrong'\r\n          console.log(err)\r\n        })\r\n        }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\nbody { \r\n  background-color:#f4f4f4;\r\n}\r\n  .login{\r\n    background-color:#fff;\r\n    margin-top:10%;\r\n  }\r\n  input {\r\n    padding: 25px 10px;\r\n}\r\n</style>\r\n"]}]}