{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/views/Products.vue?vue&type=style&index=0&id=7177119e&scoped=true&lang=css&","dependencies":[{"path":"/app/src/views/Products.vue","mtime":1604249793059},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":1603362889781},{"path":"/app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1603362889381},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":1603362890041},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1603362890021},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1603362889381}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbnB1dCB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Cg=="},{"version":3,"sources":["Products.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA","file":"Products.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"products\">\r\n    <Navbar></Navbar> \r\n      <div class=\"album py-5 bg-light\">\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div v-for=\"product in ProductData\" :key=\"product.id\" class=\"col-md-4\">\r\n                <div class=\"card mb-4 box-shadow\">\r\n                  <img class=\"card-img-top\" :src=\"product.image\" alt=\"Card image cap\">\r\n                  <div class=\"card-body text-center\">\r\n                      <h5 class=\"card-text\"> {{product.name}} | {{product.price}} $</h5><br>\r\n                      <div class=\"d-flex justify-content-center align-items-center\">\r\n                        <button type=\"button\" class=\"btn btn-light\" v-on:click=\"decreaseQuantity(product.id)\"> - </button>\r\n                        <input type=\"number\" :id=\"product.id\" class=\"form-control input-number\" value=\"1\" min=\"1\" :max=\"product.quantity\">\r\n                        <button type=\"button\" class=\"btn btn-light\" v-on:click=\"addQuantity(product.id, product.quantity)\"> + </button>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-center\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"addtoCart(product.id)\"> add to cart </button>\r\n                      </div>\r\n                      <small class=\"card-text\" :id=\"product.id+'sign'\"></small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Navbar from '../components/Navbar'\r\n  import { getAPI, getAPIwithToken} from '../axios-api'\r\n\r\n  export default {\r\n    name: 'Products',\r\n\r\n    data () {\r\n      return {\r\n          ProductData: []\r\n        }\r\n    },\r\n  \r\n    components: {\r\n      Navbar\r\n    },\r\n\r\n    created () {\r\n      console.log(this.$store.state.cart)\r\n      getAPI.get('/api/product/',)\r\n      .then(response => {\r\n        this.ProductData = response.data.results\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    },\r\n\r\n    methods: {\r\n      addQuantity(id, max){\r\n        if (document.getElementById(id).value < max){\r\n          document.getElementById(id).value ++\r\n        }\r\n      },\r\n      decreaseQuantity(id){\r\n        if (document.getElementById(id).value > 1){\r\n          document.getElementById(id).value --\r\n        }\r\n      },\r\n      addtoCart(id, quantity){\r\n        if (!this.$store.state.cart){\r\n          this.$router.push({ name: 'login' })\r\n\r\n        }else if (!this.$store.state.cart_set.has(id)){\r\n          quantity = document.getElementById(id).value\r\n          getAPIwithToken.post('/api/orderitem/', {item: id, quantity: quantity})\r\n        .then(response => {\r\n          this.$store.state.cart.push(response.data)\r\n          this.$store.state.cart_set.add(id)\r\n          document.getElementById(id).value  = 1\r\n          document.getElementById(id+'sign').innerHTML = 'buy success'\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          document.getElementById(id+'sign').innerHTML = 'bad request'\r\n        })\r\n\r\n        }else{\r\n          quantity = document.getElementById(id).value\r\n          var orderitemid = this.$store.state.cart.find(function(ele){\r\n              return ele.item == id;          \r\n          }).id\r\n          getAPIwithToken.patch('/api/orderitem/'+orderitemid+'/', {quantity: quantity})\r\n        .then((response) => {\r\n          console.log(response)\r\n          var orderitemindex = this.$store.state.cart.findIndex(x => x.id == response.data.id)\r\n          this.$store.state.cart[orderitemindex].quantity = response.data.quantity\r\n          console.log(this.$store.state.cart)\r\n          document.getElementById(id).value  = 1\r\n          document.getElementById(id+'sign').innerHTML = 'change request amount'\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          document.getElementById(id+'sign').innerHTML = 'bad request'\r\n        })\r\n        }\r\n      },\r\n\r\n    },\r\n  \r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  input {\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n"]}]}