{"remainingRequest":"/home/bright2227/django/shop-app-api-demo/frontend/vuedrf/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bright2227/django/shop-app-api-demo/frontend/vuedrf/src/views/Register.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/bright2227/django/shop-app-api-demo/frontend/vuedrf/src/views/Register.vue","mtime":1603285999767},{"path":"/home/bright2227/django/shop-app-api-demo/frontend/vuedrf/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bright2227/django/shop-app-api-demo/frontend/vuedrf/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/bright2227/django/shop-app-api-demo/frontend/vuedrf/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/bright2227/django/shop-app-api-demo/frontend/vuedrf/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bright2227/django/shop-app-api-demo/frontend/vuedrf/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KYm9keSB7IA0KICBiYWNrZ3JvdW5kLWNvbG9yOiNmNGY0ZjQ7DQp9DQogIC5sb2dpbnsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7DQogICAgbWFyZ2luLXRvcDoxMCU7DQogIH0NCiAgaW5wdXQgew0KICAgIHBhZGRpbmc6IDI1cHggMTBweDsNCn0NCg=="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n  <div class=\"container text-dark\">\r\n    <div class=\"row justify-content-md-center\">\r\n      <div class=\"col-md-5 p-3 login justify-content-md-center\">\r\n        <h1 class=\"h3 mb-3 font-weight-normal text-center\">Register</h1>\r\n\r\n        <form v-on:submit.prevent=\"register\" v-if=\"!waitActivate\">\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" name=\"username\" id=\"user\" v-model=\"username\" class=\"form-control\" placeholder=\"Username\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"password\" name=\"password\" id=\"pass\" v-model=\"password\" class=\"form-control\" placeholder=\"Password\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"password\" name=\"password_check\"  v-model=\"password_check\" class=\"form-control\" placeholder=\"Password Double Check\">\r\n          </div>   \r\n          <div class=\"form-group\">\r\n            <input type=\"first_name\" name=\"first_name\"  v-model=\"first_name\" class=\"form-control\" placeholder=\"first_name\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"last_name\" name=\"last_name\" v-model=\"last_name\" class=\"form-control\" placeholder=\"last_name\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"email\" name=\"email\"  v-model=\"email\" class=\"form-control\" placeholder=\"email\">\r\n          </div>                                       \r\n          <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">Register</button>\r\n          <p class=\"p3 mb-3 font-weight-normal text-center\">{{inccorrectmsg}}</p>\r\n        </form>\r\n        <div v-if=\"waitActivate\">\r\n          <h6> {{afterRegistermsg}}</h6>\r\n          <div class=\"col text-center\" v-if=\"afterActivate\">\r\n            <button type=\"submit\" class=\"btn btn-default\" v-on:click=\"tologin()\"> return to login page</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAPI } from '../axios-api'\r\n\r\n  export default {\r\n    name: 'register',\r\n    data () {\r\n      return {\r\n        username: '',\r\n        password: '',\r\n        password_check: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        inccorrectmsg: '',\r\n        afterRegistermsg: '',\r\n        afterActivate: false,\r\n        waitActivate: false\r\n      }\r\n    },\r\n\r\n    created () {\r\n      console.log(this.$route.query.token)\r\n      if (this.$route.query.token != undefined){\r\n          getAPI.get('/api/user/verification?token='+this.$route.query.token,)\r\n          .then(() => {\r\n            this.waitActivate = true\r\n            this.afterActivate = true\r\n            this.afterRegistermsg = 'activation success, please login.'\r\n          })\r\n          .catch(err => {\r\n            this.inccorrectmsg = 'activation fail'\r\n            console.log(err)\r\n          })\r\n      }\r\n    },\r\n\r\nmethods: {\r\n      tologin(){\r\n        this.$router.push({ name: 'login' })\r\n      },\r\n      register () { \r\n        const reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        if (this.password == ''| this.username == '' | this.password_check == ''| \r\n            this.first_name == ''| this.last_name == ''| this.email == ''){\r\n          this.inccorrectmsg = 'some field is empty'\r\n        } else if (!reg.test(this.email)){\r\n          this.inccorrectmsg = 'email format wrong'\r\n        } else if(this.password.length < 6) {\r\n          this.inccorrectmsg = 'password should have at least 6 characters'\r\n        } else if(this.password != this.password_check) {\r\n          this.inccorrectmsg = 'password double check fail'\r\n        } else {\r\n          this.$store.dispatch('userRegister', {\r\n          username: this.username,\r\n          password: this.password,\r\n          password_check: this.password_check,\r\n          first_name: this.first_name,\r\n          last_name: this.last_name,\r\n          email: this.email,          \r\n        })\r\n        .then(() => {\r\n          this.waitActivate = true\r\n          this.afterRegistermsg = 'please click activation mail to verify your account'\r\n        })\r\n        .catch((err) => {\r\n          this.inccorrectmsg = 'username or email repeat'\r\n          console.log(err)\r\n        })\r\n        }\r\n        }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\nbody { \r\n  background-color:#f4f4f4;\r\n}\r\n  .login{\r\n    background-color:#fff;\r\n    margin-top:10%;\r\n  }\r\n  input {\r\n    padding: 25px 10px;\r\n}\r\n</style>\r\n"]}]}